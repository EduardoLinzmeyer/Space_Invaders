import pygame
from pygame.examples.moveit import HEIGHT

from laser import Laser

class Player(pygame.sprite.Sprite):

    def __init__(self,pos,constraint,speed):
        super().__init__()
        self.image = pygame.image.load('<Diretório>/player.png').convert_alpha()
        self.rect = self.image.get_rect(midbottom = pos)
        self.speed = speed
        self.max_x_constraint = constraint
        self.ready = True
        self.laser_time = 0
        self.laser_cooldown = 500

        self.lasers = pygame.sprite.Group()


    # Classe de botões/ações
    def get_input(self):
        keys = pygame.key.get_pressed()

        # Movimentação horizontal
        if keys[pygame.K_d]:
            self.rect.x += self.speed
        elif keys[pygame.K_RIGHT]:
            self.rect.x += self.speed
        elif keys[pygame.K_a]:
            self.rect.x -= self.speed
        elif keys[pygame.K_LEFT]:
            self.rect.x -= self.speed

        #Movimentação vertical (futuro implemento)
        """
        if keys[pygame.K_w]:
            self.rect.y -= self.speed
        elif keys[pygame.K_UP]:
            self.rect.y -= self.speed
        elif keys[pygame.K_s]:
            self.rect.y += self.speed
        elif keys[pygame.K_DOWN]:
            self.rect.y += self.speed/*
        """


        #Disparo
        if keys[pygame.K_SPACE] and self.ready:
            self.shoot_laser()
            self.ready = False
            self.laser_time = pygame.time.get_ticks()


    #Reloading do tiro
    def recharge(self):
        if not self.ready:
            current_time = pygame.time.get_ticks()
            if current_time - self.laser_time >= self.laser_cooldown:
                self.ready = True


    #Colização horizontal do player na tela
    def x_constraint(self):
        if self.rect.left <= 0:
            self.rect.left = 0
        if self.rect.right >= self.max_x_constraint:
            self.rect.right = self.max_x_constraint

    #Colizão vertical do player na tela (futuro implemento)


    #Tiros
    def shoot_laser(self):
        self.lasers.add(Laser(self.rect.center, -8, self.rect.bottom))


    def update(self):
        self.get_input()
        self.x_constraint()
        self.recharge()
        self.lasers.update()
